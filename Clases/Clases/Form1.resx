<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>